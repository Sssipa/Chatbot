<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>TinyBoss Chatbot - Parenting Assistant</title>
    <meta name="description" content="Chatbot parenting TinyBoss - Tanya jawab seputar pengasuhan anak">

    @vite(['resources/css/app.css', 'resources/js/app.js'])
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <script defer src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js"></script>

    <style>
        /* Custom scrollbar */
        .custom-scrollbar::-webkit-scrollbar {
            width: 6px;
        }

        .custom-scrollbar::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 10px;
        }

        .custom-scrollbar::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 10px;
        }

        .custom-scrollbar::-webkit-scrollbar-thumb:hover {
            background: #a8a8a8;
        }

        /* Animation for typing indicator */
        @keyframes bounce {

            0%,
            80%,
            100% {
                transform: translateY(0);
            }

            40% {
                transform: translateY(-10px);
            }
        }

        .animate-bounce-custom {
            animation: bounce 1.4s infinite;
        }
    </style>
</head>

<body class="bg-gray-50 h-screen overflow-hidden">
    <div class="flex h-screen">
        <!-- Sidebar -->
        <aside
            class="w-80 bg-gradient-to-b from-indigo-900 via-indigo-800 to-indigo-900 h-full flex flex-col shadow-2xl border-r border-indigo-700">
            <!-- Header Section -->
            <div class="p-6 border-b border-indigo-700">
                <div class="flex items-center space-x-3 mb-6">
                    <div
                        class="w-10 h-10 bg-gradient-to-r from-blue-400 to-purple-500 rounded-xl flex items-center justify-center">
                        <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                        </svg>
                    </div>
                    <div>
                        <h1 class="text-xl font-bold text-white">TinyBoss AI</h1>
                        <p class="text-indigo-300 text-sm">Parenting Assistant</p>
                    </div>
                </div>

                <!-- New Chat Button -->
                <a href="{{ route('chatbot') }}"
                    class="w-full bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white font-medium py-3 px-4 rounded-xl flex items-center justify-center space-x-2 transition-all duration-200 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5">
                    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
                    </svg>
                    <span>New Chat</span>
                </a>
            </div>

            <!-- Navigation Section -->
            <div class="flex-1 p-6 overflow-y-auto custom-scrollbar">
                <nav class="space-y-2">
                    <!-- Home Link -->
                    <a href="{{ route('home') }}"
                        class="flex items-center p-3 text-indigo-200 hover:text-white hover:bg-indigo-700/50 rounded-xl transition-all duration-200 group">
                        {{-- <svg class="w-5 h-5 mr-3 group-hover:scale-110 transition-transform duration-200"
                            fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                        </svg> --}}
                        <span class="font-medium">Beranda</span>
                    </a>

                    <!-- Chat History Section -->
                    <div x-data="{ openHistory: true }" class="mt-6">
                        <button @click="openHistory = !openHistory"
                            class="flex items-center justify-between w-full p-3 text-indigo-200 hover:text-white hover:bg-indigo-700/50 rounded-xl transition-all duration-200 group">
                            <div class="flex items-center">
                                {{-- <svg class="w-5 h-5 mr-3 group-hover:scale-110 transition-transform duration-200"
                                    fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg> --}}
                                <span class="font-medium">Chat History</span>
                            </div>
                            <svg :class="{'rotate-180': openHistory, 'rotate-0': !openHistory}"
                                class="w-4 h-4 transform transition-transform duration-200" fill="none"
                                stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M19 9l-7 7-7-7" />
                            </svg>
                        </button>

                        <!-- Chat History List -->
                        <div x-show="openHistory" x-cloak x-transition:enter="transition ease-out duration-200"
                            x-transition:enter-start="opacity-0 transform scale-95"
                            x-transition:enter-end="opacity-100 transform scale-100"
                            class="mt-2 space-y-1 max-h-64 overflow-y-auto custom-scrollbar">
                            @if(chatHistories && chatHistories.length > 0)
                            @each(chat in chatHistories)
                            <a href="{{ route('chatbot') }}?historyId={{ chat.id }}"
                                class="block p-3 mx-2 text-indigo-300 hover:text-white hover:bg-indigo-700/30 rounded-lg transition-all duration-200 group">
                                <div class="flex items-start space-x-2">
                                    <svg class="w-4 h-4 mt-0.5 flex-shrink-0 opacity-60 group-hover:opacity-100"
                                        fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                                    </svg>
                                    <div class="flex-1 min-w-0">
                                        <p class="text-sm font-medium truncate">{{ chat.user_message.substring(0, 25)
                                            }}...</p>
                                        <p class="text-xs text-indigo-400 mt-1">
                                            @if(DateTime && chat.createdAt)
                                            {{ chat.createdAt.toFormat ? chat.createdAt.toFormat('dd/MM/yyyy') :
                                            chat.createdAt }}
                                            @endif
                                        </p>
                                    </div>
                                </div>
                            </a>
                            @endeach
                            @else
                            <div class="p-4 text-center">
                                <svg class="w-12 h-12 mx-auto text-indigo-400 opacity-50 mb-2" fill="none"
                                    stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                                </svg>
                                <p class="text-indigo-400 text-sm">No chat history yet</p>
                                <p class="text-indigo-500 text-xs mt-1">Start a conversation to see your history</p>
                            </div>
                            @endif
                        </div>
                    </div>
                </nav>
            </div>

            <!-- Footer Section -->
            <div class="p-6 border-t border-indigo-700">
                <div class="bg-indigo-800/50 rounded-xl p-4">
                    <div class="flex items-center space-x-2 mb-2">
                        <svg class="w-4 h-4 text-yellow-400" fill="currentColor" viewBox="0 0 20 20">
                            <path
                                d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
                        </svg>
                        <span class="text-yellow-400 text-sm font-medium">Tip of the Day</span>
                    </div>
                    <p class="text-indigo-200 text-xs leading-relaxed">
                        Berikan ASI eksklusif selama 6 bulan pertama untuk tumbuh kembang optimal bayi.
                    </p>
                </div>
            </div>
        </aside>

        <!-- Main Chat Area -->
        <div x-data="chatBot()" class="flex-1 flex flex-col h-screen">
            <!-- Header -->
            <header class="bg-white border-b border-gray-200 px-6 py-4 flex justify-between items-center shadow-sm">
                <div class="flex items-center space-x-3">
                    <div
                        class="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center">
                        <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                        </svg>
                    </div>
                    <div>
                        <h2 class="text-lg font-semibold text-gray-900">TinyBoss Assistant</h2>
                        <p class="text-sm text-gray-500">Always here to help with parenting</p>
                    </div>
                </div>

                @if(auth.user)
                <div class="relative" x-data="{ open: false }">
                    <button @click="open = !open"
                        class="flex items-center space-x-2 p-2 rounded-lg hover:bg-gray-100 transition-colors duration-200">
                        <img src="https://ui-avatars.com/api/?name={{ encodeURIComponent(auth.user.fullName || auth.user.email) }}&background=6366f1&color=fff&size=32"
                            alt="Profile" class="w-8 h-8 rounded-full">
                        <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                        </svg>
                    </button>

                    <div x-show="open" @click.away="open = false" x-cloak
                        x-transition:enter="transition ease-out duration-100"
                        x-transition:enter-start="transform opacity-0 scale-95"
                        x-transition:enter-end="transform opacity-100 scale-100"
                        class="absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 py-1 z-50">
                        <a href="{{ route('profile.show') }}"
                            class="flex items-center px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                            <svg class="w-4 h-4 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                            </svg>
                            Profile
                        </a>
                        <form action="{{ route('auth.logout') }}" method="POST" class="block">
                            {{ csrfField() }}
                            <button type="submit"
                                class="flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">
                                <svg class="w-4 h-4 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
                                </svg>
                                Logout
                            </button>
                        </form>
                    </div>
                </div>
                @else
                {{-- <div class="flex items-center space-x-3">
                    <a href="{{ route('auth.login') }}"
                        class="px-4 py-2 text-sm font-medium text-indigo-600 hover:text-indigo-500 transition-colors duration-200">
                        Login
                    </a>
                    <a href="{{ route('auth.register') }}"
                        class="px-4 py-2 text-sm font-medium bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors duration-200">
                        Register
                    </a>
                </div> --}}
                <div class="relative group">
                    <a aria-label="login" href="{{ route('auth.login') }}" class="flex items-center focus:outline-none">
                        <span class="sr-only">Login</span>
                        <img src="/images/login-icon.png" alt="Login" class="w-8" />
                    </a>
                    <div
                        class="absolute right-0 mt-2 px-2 py-1 text-sm text-white bg-gray-800 rounded shadow-md opacity-0 group-hover:opacity-100 transition-opacity duration-200 z-10">
                        Login
                    </div>
                </div>
                @endif
            </header>

            <!-- Messages Area -->
            <div id="messages"
                class="flex-1 overflow-y-auto p-6 space-y-4 bg-gradient-to-b from-gray-50 to-white custom-scrollbar">
                <template x-for="(message, index) in messages" :key="index">
                    <div class="flex" :class="message.from === 'bot' ? 'justify-start' : 'justify-end'">
                        <div class="flex items-end space-x-2 max-w-xs lg:max-w-md"
                            :class="message.from === 'bot' ? 'flex-row' : 'flex-row-reverse space-x-reverse'">
                            <!-- Avatar -->
                            <div class="w-8 h-8 rounded-full flex-shrink-0 flex items-center justify-center"
                                :class="message.from === 'bot' ? 'bg-gradient-to-r from-blue-500 to-purple-600' : 'bg-gradient-to-r from-green-500 to-blue-500'">
                                <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path x-show="message.from === 'bot'" stroke-linecap="round" stroke-linejoin="round"
                                        stroke-width="2"
                                        d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                                    <path x-show="message.from === 'user'" stroke-linecap="round"
                                        stroke-linejoin="round" stroke-width="2"
                                        d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                                </svg>
                            </div>

                            <!-- Message Bubble -->
                            <div class="px-4 py-3 rounded-2xl shadow-sm"
                                :class="message.from === 'bot' ? 'bg-white border border-gray-200 rounded-bl-sm' : 'bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-br-sm'">
                                <p class="text-sm leading-relaxed"
                                    :class="message.from === 'bot' ? 'text-gray-800' : 'text-white'"
                                    x-html="message.text"></p>
                            </div>
                        </div>
                    </div>
                </template>

                <!-- Typing Indicator -->
                <div x-show="botTyping" x-cloak class="flex justify-start">
                    <div class="flex items-end space-x-2 max-w-xs">
                        <div
                            class="w-8 h-8 rounded-full bg-gradient-to-r from-blue-500 to-purple-600 flex items-center justify-center">
                            <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z" />
                            </svg>
                        </div>
                        <div class="bg-white border border-gray-200 rounded-2xl rounded-bl-sm px-4 py-3 shadow-sm">
                            <div class="flex space-x-1">
                                <div class="w-2 h-2 bg-gray-400 rounded-full animate-bounce"></div>
                                <div class="w-2 h-2 bg-gray-400 rounded-full animate-bounce"
                                    style="animation-delay: 0.1s"></div>
                                <div class="w-2 h-2 bg-gray-400 rounded-full animate-bounce"
                                    style="animation-delay: 0.2s"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Input Area -->
            <div class="bg-white border-t border-gray-200 p-6">
                <div class="flex items-center space-x-4">
                    <div class="flex-1 relative">
                        <input type="text" placeholder="Type your parenting question here..." autocomplete="off"
                            x-ref="input" @keydown.enter="sendMessage($event.target)"
                            class="w-full px-4 py-3 pr-12 bg-gray-100 border border-gray-200 rounded-2xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 text-gray-800 placeholder-gray-500">

                        <div class="absolute right-2 items-center inset-y-0 hidden sm:flex">
                            <button type="button" @click="sendMessage($refs.input)"
                                class="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 hover:from-blue-600 hover:to-purple-700 text-white rounded-full flex items-center justify-center transition-all duration-200 shadow-lg hover:shadow-xl">
                                <svg class="w-4 h-4 rotate-90" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8" />
                                </svg>
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Quick Actions -->
                <div class="flex flex-wrap gap-2 mt-3">
                    <button @click="quickMessage('Bagaimana cara mengatasi anak yang susah makan?')"
                        class="px-3 py-1 text-xs bg-blue-100 text-blue-700 rounded-full hover:bg-blue-200 transition-colors duration-200">
                        Tips Makan Anak
                    </button>
                    <button @click="quickMessage('Kapan waktu yang tepat untuk MPASI?')"
                        class="px-3 py-1 text-xs bg-purple-100 text-purple-700 rounded-full hover:bg-purple-200 transition-colors duration-200">
                        MPASI
                    </button>
                    <button @click="quickMessage('Bagaimana cara menidurkan bayi?')"
                        class="px-3 py-1 text-xs bg-green-100 text-green-700 rounded-full hover:bg-green-200 transition-colors duration-200">
                        Sleep Training
                    </button>
                    <button @click="quickMessage('Tips mengajarkan anak berbicara')"
                        class="px-3 py-1 text-xs bg-yellow-100 text-yellow-700 rounded-full hover:bg-yellow-200 transition-colors duration-200">
                        Speech Development
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script>
        function chatBot() {
            return {
                botTyping: false,
                messages: [],

                init() {
                    // Check if there's a specific history to load
                    const urlParams = new URLSearchParams(window.location.search);
                    const historyId = urlParams.get('historyId');

                    if (historyId) {
                        // Load specific chat history (you can implement this based on your needs)
                        this.loadChatHistory(historyId);
                    } else {
                        this.setDefaultMessage();
                    }
                    this.scrollChat();
                },

                setDefaultMessage() {
                    this.messages = [{
                        from: 'bot',
                        text: '👋 Halo! Saya TinyBoss, asisten parenting AI Anda. Saya siap membantu menjawab pertanyaan seputar pengasuhan anak. Apa yang ingin Anda tanyakan hari ini?'
                    }];
                },

                loadChatHistory(historyId) {
                    // This would typically load from your backend
                    // For now, just show default message
                    this.setDefaultMessage();
                },

                quickMessage(message) {
                    this.$refs.input.value = message;
                    this.sendMessage(this.$refs.input);
                },

                async sendMessage(target) {
                    const chatInput = target.value.trim();
                    if (!chatInput) return;

                    const sessionId = localStorage.getItem("chat_session") || crypto.randomUUID();
                    localStorage.setItem("chat_session", sessionId);

                    // Add user message
                    this.messages.push({
                        from: 'user',
                        text: chatInput
                    });

                    target.value = '';
                    this.scrollChat();

                    // Show typing indicator
                    setTimeout(() => {
                        this.botTyping = true;
                        this.scrollChat();
                    }, 300);

                    try {
                        const response = await fetch('/api/chatbot/message', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'Accept': 'application/json'
                            },
                            body: JSON.stringify({
                                chatInput: chatInput,
                                sessionId: sessionId
                            }),
                        });

                        if (!response.ok) {
                            throw new Error(`HTTP error! status: ${response.status}`);
                        }

                        const data = await response.json();

                        // Add bot response
                        setTimeout(() => {
                            this.botTyping = false;
                            this.messages.push({
                                from: 'bot',
                                text: data.response || 'Maaf, saya tidak dapat memproses permintaan Anda saat ini. Silakan coba lagi.'
                            });
                            this.scrollChat();
                        }, 800);
                    } catch (error) {
                        console.error('Error sending message:', error);
                        setTimeout(() => {
                            this.botTyping = false;
                            this.messages.push({
                                from: 'bot',
                                text: '⚠️ Maaf, saya sedang mengalami masalah koneksi. Silakan coba lagi dalam beberapa saat.'
                            });
                            this.scrollChat();
                        }, 800);
                    }
                },

                scrollChat() {
                    this.$nextTick(() => {
                        const messagesContainer = document.getElementById("messages");
                        if (messagesContainer) {
                            messagesContainer.scrollTop = messagesContainer.scrollHeight;
                        }
                    });
                }
            }
        }
    </script>
</body>

</html>